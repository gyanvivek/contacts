{"version":3,"sources":["../node_modules/react-a11y/lib sync /^react/-a11y/-plugin/-.*$","common/TextInput/index.tsx","common/Button/index.tsx","common/Surface/index.tsx","store/selectors/auth.tsx","store/actions/auth/types.ts","pages/login/index.tsx","utils/constants.ts","common/Header/index.tsx","common/ContactImage/index.tsx","pages/home/ContactItem.tsx","hooks/useHover.ts","pages/home/index.tsx","ProtectedRoutes.tsx","routes.tsx","store/reducer/auth.ts","store/reducer/index.ts","store/index.tsx","App.tsx","serviceWorker.ts","index.tsx","assets/logout.svg","assets/google.svg","assets/contactimage.svg","assets/delete.svg"],"names":["webpackEmptyContext","req","e","Error","code","keys","resolve","module","exports","id","TextInput","placeholer","type","className","placeholder","Button","text","onClick","disabled","Surface","React","forwardRef","props","children","style","state","auth","isAuthenticated","loading","Login","isloading","useSelector","authSelector","dispatch","useDispatch","history","useHistory","display","flexDirection","alignItems","src","Logo","alt","marginBottom","clientId","render","renderProps","buttonText","onSuccess","data","types","push","onFailure","error","console","log","cookiePolicy","Header","name","email","image_url","Logout","margin","ContactImage","ContactSvg","ContactItem","phoneNumber","imageUrl","useState","value","setValue","ref","useRef","handleMouseOver","handleMouseOut","useEffect","node","current","addEventListener","removeEventListener","useHover","hoverRef","isHover","padding","height","width","DeleteIcon","Home","map","item","key","ProtectedRoute","Component","component","to","pathname","ROUTES","path","exact","ProtectedRoutes","initialState","reducer","combineReducers","oldState","action","JSON","parse","stringify","store","createStore","applyMiddleware","thunk","RouteWithSubRoutes","route","routes","App","i","Boolean","window","location","hostname","match","a11y","require","default","ReactDOM","rules","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.9e818169.chunk.js","sourcesContent":["function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 212;","import React from 'react';\r\n\r\nimport './styles.css';\r\n\r\nexport type InputProps = {\r\n  placeholer: string;\r\n};\r\n\r\nconst TextInput = ({ placeholer }: InputProps) => {\r\n  return <input type=\"text\" className=\"textinput\" placeholder={placeholer} />;\r\n};\r\n\r\nexport default TextInput;\r\n","import React from 'react';\r\n\r\nimport './styles.css';\r\n\r\nexport type ButtonProps = {\r\n  text: string;\r\n  onClick: () => void;\r\n  disabled?: boolean;\r\n};\r\n\r\nconst Button = ({ text, onClick, disabled }: ButtonProps) => {\r\n  return (\r\n    <button className=\"button\" disabled={disabled} onClick={onClick}>\r\n      {text}\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default Button;\r\n","import React from 'react';\r\n\r\nimport './styles.css';\r\n\r\ntype PropsT = { children: React.ReactNode; style?: React.CSSProperties };\r\n\r\nconst Surface = React.forwardRef((props: PropsT) => {\r\n  const { children, style = {} } = props;\r\n  return (\r\n    <div className=\"surface\" style={{ ...style }}>\r\n      {children}\r\n    </div>\r\n  );\r\n});\r\n\r\nexport default Surface;\r\n","const isAuthenticated = (state:any )=> state.auth.isAuthenticated;\r\n\r\nconst loading = (state : any) => state.auth.loading;\r\n\r\nexport default { isAuthenticated ,loading};\r\n","export default {\r\n  AUTH_PENDING: 'AUTH_PENDING',\r\n  AUTH_SUCCESS: 'AUTH_SUCCESS',\r\n  AUTH_FAILURE: 'AUTH_FAILURE',\r\n\r\n  AUTH_LOGOUT_PENDING: 'AUTH_LOGOUT_PENDING',\r\n  AUTH_LOGOUT_FAILURE: 'AUTH_LOGOUT_FAILURE',\r\n  AUTH_LOGOUT_SUCCESS: 'AUTH_LOGOUT_SUCCESS',\r\n};\r\n","import React from 'react';\r\nimport TextInput from '../../common/TextInput';\r\nimport Button from '../../common/Button';\r\nimport Surface from '../../common/Surface';\r\nimport { LOGIN_TITLE } from '../../utils/constants';\r\nimport Logo from '../../assets/google.svg';\r\nimport { GoogleLogin } from 'react-google-login';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport authSelector from '../../store/selectors/auth';\r\nimport { types } from '../../store/actions/auth';\r\nimport { useHistory } from 'react-router-dom';\r\nimport './styles.css';\r\n\r\nconst Login = () => {\r\n  const isloading = useSelector(authSelector.loading);\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"login-container\">\r\n        <Surface>\r\n          <div\r\n            style={{\r\n              display: 'flex',\r\n              flexDirection: 'column',\r\n              alignItems: 'center',\r\n            }}\r\n          >\r\n            <img\r\n              src={Logo}\r\n              alt=\"\"\r\n              className=\"login-logo\"\r\n              style={{ marginBottom: 16 }}\r\n            />\r\n            <span className=\"login-header\" style={{ marginBottom: 32 }}>\r\n              {LOGIN_TITLE}\r\n            </span>\r\n            <TextInput placeholer=\"Email\" />\r\n            <TextInput placeholer=\"Password\" />\r\n            <GoogleLogin\r\n              clientId={\r\n                '466588689475-3vn3gfoo72al6d4j74s4mtonuu4aftuf.apps.googleusercontent.com'\r\n              }\r\n              render={renderProps => (\r\n                <Button\r\n                  text=\"SignIn\"\r\n                  onClick={renderProps.onClick}\r\n                  disabled={isloading}\r\n                />\r\n              )}\r\n              disabled={isloading}\r\n              buttonText=\"Login\"\r\n              onSuccess={data => {\r\n                dispatch({ type: types.AUTH_SUCCESS, data: data });\r\n                history.push('/home');\r\n              }}\r\n              onFailure={error => console.log(error)}\r\n              cookiePolicy={'single_host_origin'}\r\n            />\r\n          </div>\r\n        </Surface>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","export const LOGIN_TITLE = \"Sign in with Google\";","import React from 'react';\r\nimport Logout from '../../assets/logout.svg';\r\nimport './styles.css';\r\n\r\nexport type HeaderProps = {\r\n  image_url?: string;\r\n  email: string;\r\n  name: string;\r\n};\r\n\r\nconst Header = ({ name, email, image_url }: HeaderProps) => {\r\n  return (\r\n    <div className=\"header\">\r\n      <div className=\"header-detail\">\r\n        <img src={Logout} alt=\"\" style={{ margin: 4 }} />\r\n        <div style={{ display: 'flex', flexDirection: 'column' }}>\r\n          <div>{name}</div>\r\n          <div>{email}</div>\r\n        </div>\r\n      </div>\r\n      <img className=\"logout\" src={Logout} alt=\"\" />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React from 'react';\r\nimport ContactSvg from '../../assets/contactimage.svg';\r\n\r\nconst ContactImage = () => {\r\n  return <img src={ContactSvg} alt=\"\" />;\r\n};\r\n\r\nexport default ContactImage;\r\n","import React from 'react';\r\nimport ContactImage from '../../common/ContactImage';\r\nimport Surface from '../../common/Surface';\r\nimport useHover from '../../hooks/useHover';\r\nimport CheckBox from '../../common/CheckBox';\r\nimport DeleteIcon from '../../assets/delete.svg';\r\n\r\nexport type ContactItemProps = {\r\n  imageUrl?: string;\r\n  name: string;\r\n  email: string;\r\n  phoneNumber: string;\r\n};\r\nconst ContactItem = ({\r\n  name,\r\n  email,\r\n  phoneNumber,\r\n  imageUrl,\r\n}: ContactItemProps) => {\r\n  const [hoverRef, isHover] = useHover<HTMLDivElement>();\r\n\r\n  return (\r\n    <div\r\n      ref={hoverRef}\r\n      className={isHover ? 'contact-item-active' : 'contact-item-deactive'}\r\n      style={{ padding: '8px 64px', marginBottom: '8px' }}\r\n    >\r\n      {/* <div> {isHover ? <CheckBox /> : null}</div> */}\r\n      <div>\r\n        <span>\r\n          <ContactImage />\r\n          <span> {name}</span>\r\n        </span>\r\n        <span>{email}</span>\r\n        <span>{phoneNumber}</span>\r\n      </div>\r\n      <div style={{ height: 48, width: 48 }}>\r\n        {' '}\r\n        {isHover ? <img src={DeleteIcon} alt=\"\" /> : null}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ContactItem;\r\n","import { useRef, useState, useEffect, MutableRefObject } from \"react\";\r\n\r\nexport default function useHover<T extends HTMLElement = HTMLElement>(): [\r\n  MutableRefObject<T>?,\r\n  boolean?\r\n] {\r\n  const [value, setValue] = useState<boolean>(false);\r\n  const ref = useRef<T>(null);\r\n  const handleMouseOver = () => setValue(true);\r\n  const handleMouseOut = () => setValue(false);\r\n  useEffect(\r\n    () => {\r\n      const node = ref.current;\r\n      if (node) {\r\n        node.addEventListener(\"mouseover\", handleMouseOver);\r\n        node.addEventListener(\"mouseout\", handleMouseOut);\r\n        return () => {\r\n          node.removeEventListener(\"mouseover\", handleMouseOver);\r\n          node.removeEventListener(\"mouseout\", handleMouseOut);\r\n        };\r\n      }\r\n    },\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    [ref.current]\r\n  );\r\n  return [ref as MutableRefObject<T>, !!value];\r\n}\r\n","import React from 'react';\r\nimport Header from '../../common/Header';\r\nimport ContactItem from './ContactItem';\r\n\r\nimport './styles.css';\r\n\r\nconst data = [\r\n  {\r\n    name: 'Gyan Vivek',\r\n    email: 'gyanvivek@gmail.com',\r\n    phoneNumber: '8356851291',\r\n    id: '1',\r\n  },\r\n  {\r\n    name: 'Gyan Vivek',\r\n    email: 'gyanvivek@gmail.com',\r\n    phoneNumber: '8356851291',\r\n    id: '2',\r\n  },\r\n  {\r\n    name: 'Gyan Vivek',\r\n    email: 'gyanvivek@gmail.com',\r\n    phoneNumber: '8356851291',\r\n    id: '3',\r\n  },\r\n  {\r\n    name: 'Gyan Vivek',\r\n    email: 'gyanvivek@gmail.com',\r\n    phoneNumber: '8356851291',\r\n    id: '4',\r\n  },\r\n];\r\n\r\nconst Home = () => {\r\n  return (\r\n    <div className=\"container\">\r\n      <Header\r\n        image_url=\"../../abc\"\r\n        name=\"gyan vievelk\"\r\n        email=\"gyan vivek@gmail.com\"\r\n      />\r\n      <main className=\"home\">\r\n        <h3 className=\"home-title\">Contacts</h3>\r\n        <div>\r\n          {data.map(item => {\r\n            return <ContactItem key={item.id} {...item} />;\r\n          })}\r\n        </div>\r\n      </main>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import React from \"react\";\r\nimport { Redirect, RouteProps } from \"react-router-dom\";\r\nimport { useSelector } from \"react-redux\";\r\nimport authSelector from \"./store/selectors/auth\";\r\n\r\nexport interface Props extends RouteProps {\r\n  component: React.ComponentType;\r\n}\r\nconst ProtectedRoute = ({ component }: Props) => {\r\n  const Component = component;\r\n  const isAuthenticated = useSelector(authSelector.isAuthenticated);\r\n\r\n  return isAuthenticated ? (\r\n    <Component />\r\n  ) : (\r\n    <Redirect to={{ pathname: \"/\" }} />\r\n  );\r\n};\r\n\r\nexport default ProtectedRoute;\r\n","import React from \"react\";\r\nimport Login from \"./pages/login\";\r\nimport Home from \"./pages/home\";\r\nimport ProtectedRoutes from \"./ProtectedRoutes\";\r\n\r\nconst ROUTES = [\r\n  { path: \"/\", key: \"ROOT\", exact: true, component: () => <Login /> },\r\n  {\r\n    path: \"/home\",\r\n    key: \"APP\",\r\n    component: () => <ProtectedRoutes component={Home} />,\r\n  },\r\n];\r\n\r\nexport default ROUTES;\r\n","import { types, actions } from '../actions/auth';\r\n\r\nexport const initialState = {\r\n  isAuthenticated: true,\r\n  loading: false,\r\n};\r\n\r\nexport default (oldState = initialState, action: actions.AuthAction) => {\r\n  const state = JSON.parse(JSON.stringify(oldState));\r\n  const { type, data } = action;\r\n  switch (type) {\r\n    case types.AUTH_SUCCESS:\r\n      return {\r\n        ...state,\r\n        isAuthenticated: true,\r\n        loading: false,\r\n      };\r\n    case types.AUTH_PENDING:\r\n      return { ...state, isAuthenticated: false, loading: true };\r\n    case types.AUTH_FAILURE:\r\n      return {\r\n        ...state,\r\n        isAuthenticated: false,\r\n        error: data,\r\n        loading: false,\r\n      };\r\n    case types.AUTH_LOGOUT_SUCCESS:\r\n      return {\r\n        ...state,\r\n        isAuthenticated: false,\r\n        loading: false,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { combineReducers } from \"redux\";\r\nimport authReducer from \"./auth\";\r\n\r\nexport const reducer = combineReducers({\r\n   auth: authReducer\r\n});\r\n\r\n","import { createStore, applyMiddleware } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport { reducer } from \"./reducer\";\r\n\r\nconst store = createStore(reducer, applyMiddleware(thunk));\r\n\r\nexport default store;\r\n","import React from \"react\";\r\nimport \"./App.css\";\r\nimport { BrowserRouter, Switch, Route } from \"react-router-dom\";\r\nimport routes from \"./routes\";\r\nimport { Provider } from \"react-redux\";\r\nimport store from \"./store\";\r\n\r\nfunction RouteWithSubRoutes(route: any) {\r\n  return (\r\n    <Route\r\n      path={route.path}\r\n      render={(props) => (\r\n        // pass the sub-routes down to keep nesting\r\n        <route.component {...props} routes={route.routes} />\r\n      )}\r\n    />\r\n  );\r\n}\r\n\r\nfunction App() {\r\n  return (\r\n    <Provider store={store}>\r\n      <BrowserRouter>\r\n        <Switch>\r\n          {routes.map((route, i) => (\r\n            <RouteWithSubRoutes {...route} />\r\n          ))}\r\n        </Switch>\r\n      </BrowserRouter>\r\n    </Provider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nconst a11y = require('react-a11y').default;\r\na11y(React, ReactDOM, {\r\n  rules: {\r\n    'img-uses-alt': 'warn',\r\n    'img-redundant-alt': ['warn', ['image', 'photo', 'foto', 'bild']],\r\n    // ...\r\n  },\r\n});\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","module.exports = __webpack_public_path__ + \"static/media/logout.77efc25e.svg\";","module.exports = __webpack_public_path__ + \"static/media/google.452e3b66.svg\";","module.exports = __webpack_public_path__ + \"static/media/contactimage.067f446b.svg\";","module.exports = __webpack_public_path__ + \"static/media/delete.0f23a15e.svg\";"],"sourceRoot":""}